!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("dotenv")):"function"==typeof define&&define.amd?define(["exports","dotenv"],t):t((e||self).opencageApiClient={},e.dotenv)}(this,function(e,t){function n(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}}),t.default=e,t}var r=/*#__PURE__*/n(t);function o(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(e){}return(o=function(){return!!e})()}function u(){return u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u.apply(this,arguments)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}function i(e,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},i(e,t)}function f(e){var t="function"==typeof Map?new Map:void 0;return f=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(t){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return function(e,t,n){if(o())return Reflect.construct.apply(null,arguments);var r=[null];r.push.apply(r,t);var u=new(e.bind.apply(e,r));return n&&i(u,n.prototype),u}(e,arguments,c(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),i(n,e)},f(e)}var s=/*#__PURE__*/function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).response=void 0,t.status=void 0,t}var n,r;return r=e,(n=t).prototype=Object.create(r.prototype),n.prototype.constructor=n,i(n,r),t}(/*#__PURE__*/f(Error));function a(e,t){var n=new s(t);return n.response={status:{code:e,message:t}},n}var p=function(e){if(e.status>=200&&e.status<300)return e;var t=new s(e.statusText);throw t.status={code:e.status,message:e.statusText},t},l=function(e){return e.json()};function y(e){return void 0===e||""===e}function d(e){return null==e}function v(e){return new Promise(function(t,n){if(d(e))n(a(400,"missing or bad query"));else{var r=function(e){var t=u({},e),n="https://api.opencagedata.com/geocode/v1/json",r=!1;return y(e.proxyURL)?(y(e.key)&&(t.key=process.env.OPENCAGE_API_KEY||process.env.OCD_API_KEY),y(t.key)&&(r=!0)):(n=e.proxyURL,delete t.proxyURL),{missingKey:r,endpoint:n,query:t}}(e);if(r.missingKey)n(a(401,"missing API key"));else{var o=r.endpoint,c=function(e){return d(e)?"":Object.keys(e).map(function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])}).join("&")}(r.query);!function(e,t,n){try{return fetch(e).then(p).then(l).then(function(e){t(e)}).catch(function(e){n(e)}),Promise.resolve()}catch(e){return Promise.reject(e)}}(o+"?"+c,t,n)}}})}r.config();var b={geocode:v};e.GeocodeError=s,e.default=b,e.geocode=v});
//# sourceMappingURL=opencage-api.umd.js.map
