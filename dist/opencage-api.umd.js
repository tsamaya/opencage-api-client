!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t||self).opencage={})}(this,function(t){function e(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(t){}return(e=function(){return!!t})()}function n(){return n=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},n.apply(this,arguments)}function r(t){return r=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},r(t)}function o(t,e){return o=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},o(t,e)}function u(t){var n="function"==typeof Map?new Map:void 0;return u=function(t){if(null===t||!function(t){try{return-1!==Function.toString.call(t).indexOf("[native code]")}catch(e){return"function"==typeof t}}(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==n){if(n.has(t))return n.get(t);n.set(t,u)}function u(){return function(t,n,r){if(e())return Reflect.construct.apply(null,arguments);var u=[null];u.push.apply(u,n);var c=new(t.bind.apply(t,u));return r&&o(c,r.prototype),c}(t,arguments,r(this).constructor)}return u.prototype=Object.create(t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),o(u,t)},u(t)}var c=/*#__PURE__*/function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(e=t.call.apply(t,[this].concat(r))||this).response=void 0,e.status=void 0,e}var n,r;return r=t,(n=e).prototype=Object.create(r.prototype),n.prototype.constructor=n,o(n,r),e}(/*#__PURE__*/u(Error));function i(t,e){var n=new c(e),r={code:t,message:e};return n.status=r,n.response={status:r},n}function s(t){if(t.status>=200&&t.status<300)return t;var e=new c(t.statusText);throw e.status={code:t.status,message:t.statusText},e.response=t,e}function f(t){return t.json()}function a(t){return void 0===t||""===t}function p(t){return null==t}t.geocode=function(t){try{return Promise.resolve(new Promise(function(e,r){if(p(t))r(i(400,"missing or bad query"));else{var o=function(t){var e=n({},t),r="https://api.opencagedata.com/geocode/v1/json",o=!1;return a(t.proxyURL)?(a(t.key)&&(e.key=process.env.OPENCAGE_API_KEY),a(e.key)&&(o=!0)):(r=t.proxyURL,delete e.proxyURL),{missingKey:o,endpoint:r,query:e}}(t);if(o.missingKey)r(i(401,"missing API key"));else{var u=o.endpoint,c=function(t){return p(t)?"":Object.keys(t).map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(t[e]||"")}).join("&")}(o.query);!function(t,e,n){try{return fetch(t).then(s).then(f).then(function(t){e(t)}).catch(function(t){n(t)}),Promise.resolve()}catch(t){return Promise.reject(t)}}(u+"?"+c,e,r)}}}))}catch(t){return Promise.reject(t)}}});
//# sourceMappingURL=opencage-api.umd.js.map
