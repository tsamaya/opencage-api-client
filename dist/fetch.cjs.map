{"version":3,"file":"fetch.cjs","sources":["webpack://opencage-api-client/webpack/runtime/define_property_getters","webpack://opencage-api-client/webpack/runtime/has_own_property","webpack://opencage-api-client/webpack/runtime/make_namespace_object","webpack://opencage-api-client/./src/fetch.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { version } from './version';\nimport { checkFetchStatus, parseJSON } from './helpers/geocodeHelpers';\n\nconst USER_AGENT = `OpenCageData Geocoding NodeJS API Client/${version}`;\n\n/**\n * fetches the url and returns a promise\n * @param  {String}  url     the url to fetch\n * @param  {Function} resolve the resolve function\n * @param  {Function} reject  the reject function\n */\nexport async function fetchUrl(url: string, resolve: any, reject: any) {\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      'User-Agent': USER_AGENT,\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  })\n    .then(checkFetchStatus)\n    .then(parseJSON)\n    .then((data) => {\n      // console.debug('request succeeded with JSON response', data);\n      resolve(data);\n    })\n    .catch((error) => {\n      // console.debug('request failed', { error });\n      reject(error);\n    });\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","USER_AGENT","version","fetchUrl","url","resolve","reject","fetch","checkFetchStatus","parseJSON","data","error"],"mappings":";;;IAAAA,oBAAoB,CAAC,GAAG,CAAC,UAASC;QACjC,IAAI,IAAIC,OAAOD,WACR,IAAGD,oBAAoB,CAAC,CAACC,YAAYC,QAAQ,CAACF,oBAAoB,CAAC,CAAC,UAASE,MACzEC,OAAO,cAAc,CAAC,UAASD,KAAK;YAAE,YAAY;YAAM,KAAKD,UAAU,CAACC,IAAI;QAAC;IAGzF;;;ICNAF,oBAAoB,CAAC,GAAG,CAACI,KAAKC,OAAUF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACC,KAAKC;;;ICClFL,oBAAoB,CAAC,GAAG,CAAC;QACxB,IAAG,AAAkB,eAAlB,OAAOM,UAA0BA,OAAO,WAAW,EACrDH,OAAO,cAAc,CAAC,UAASG,OAAO,WAAW,EAAE;YAAE,OAAO;QAAS;QAEtEH,OAAO,cAAc,CAAC,UAAS,cAAc;YAAE,OAAO;QAAK;IAC5D;;;;;;;;;ACHA,MAAMI,aAAa,CAAC,yCAAyC,EAAEC,qCAAAA,OAAOA,EAAE;AAQjE,eAAeC,SAASC,GAAW,EAAEC,OAAY,EAAEC,MAAW;IACnEC,MAAMH,KAAK;QACT,QAAQ;QACR,SAAS;YACP,cAAcH;YACd,gBAAgB;YAChB,QAAQ;QACV;IACF,GACG,IAAI,CAACO,mCAAAA,gBAAgBA,EACrB,IAAI,CAACC,mCAAAA,SAASA,EACd,IAAI,CAAC,CAACC;QAELL,QAAQK;IACV,GACC,KAAK,CAAC,CAACC;QAENL,OAAOK;IACT;AACJ"}